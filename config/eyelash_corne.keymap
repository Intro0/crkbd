#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/* Key Position Groups */

#define KEYS_LEFT 0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33
#define KEYS_RIGHT 7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41
#define KEYS_THUMBS 42 43 44 45 46 47

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mtl: mod_tap_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_RIGHT KEYS_THUMBS>;
            hold-trigger-on-release;
        };

        mtr: mod_tap_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_LEFT KEYS_THUMBS>;
            hold-trigger-on-release;
        };

        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC  &kp Q            &kp W            &kp E         &kp R              &kp T                                   &kp UP                &kp Y      &kp U               &kp I                 &kp O             &kp P                &mo 3
&kp TAB  &mtl LEFT_GUI A  &mtl LEFT_ALT S  &mtl LCTRL D  &mtl LEFT_SHIFT F  &kp G                         &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &mtr RIGHT_SHIFT J  &mtr RIGHT_CONTROL K  &mtr RIGHT_ALT L  &mtr RIGHT_GUI SEMI  &kp SQT
&none    &kp Z            &kp X            &kp C         &kp V              &kp B           &kp C_MUTE              &kp DOWN              &kp N      &kp M               &kp COMMA             &kp DOT           &kp FSLH             &none
                                           &kp LGUI      &lt 1 SPACE        &kp LEFT_SHIFT                                                &kp ENTER  &lt 2 BACKSPACE     &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp SLASH     &kp N1                &kp N2    &kp N3     &kp N4                 &kp N5                                    &mmv MOVE_UP                     &none     &none     &none   &none      &none  &none
&kp ASTERISK  &kp NUMBER_6          &kp N7    &kp N8     &kp N9                 &kp N0                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none  &none
&kp EQUAL     &kp LEFT_PARENTHESIS  &kp PLUS  &kp MINUS  &kp RIGHT_PARENTHESIS  &kp PERIOD  &kp C_MUTE                    &mmv MOVE_DOWN                   &none     &none     &none   &none      &none  &none
                                              &trans     &trans                 &trans                                                                     &trans    &trans    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&none  &kp SQT          &kp DOUBLE_QUOTES  &kp LCTRL  &kp NON_US_BACKSLASH  &kp TILDE                             &mmv MOVE_UP                     &kp LEFT_BRACKET  &kp LESS_THAN         &kp EQUAL     &kp GREATER_THAN       &kp RIGHT_BRACKET  &kp SLASH
&none  &kp EXCLAMATION  &kp AT_SIGN        &kp HASH   &kp DOLLAR            &kp PERCENT           &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT_BRACE    &kp LEFT_PARENTHESIS  &kp COLON     &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE    &kp MINUS
&none  &none            &none              &none      &none                 &none        &none                    &mmv MOVE_DOWN                   &kp PIPE          &kp AMPERSAND         &kp ASTERISK  &kp PLUS               &kp UNDERSCORE     &kp GRAVE
                                           &trans     &trans                &trans                                                                 &trans            &trans                &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &trans          &none       &none       &none       &none  &none  &none
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12            &trans  &trans  &trans  &bt BT_CLR  &bt BT_PRV  &bt BT_NXT  &none  &none  &none
&none   &none   &none   &none    &none    &none    &trans            &trans          &none       &none       &none       &none  &none  &none
                        &trans   &trans   &trans                                     &trans      &trans      &trans
            >;

            label = "fn";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
